main:
  web_trigger_update: &web_trigger_update
    - name: Update Docker images
      services:
        - docker
      stages:
        - name: download models
          script: |
            mkdir -p models-enzh/enzh
            curl -sL https://github.com/mozilla/firefox-translations-models/raw/refs/heads/main/registry.json > registry.json
            files=(model lex trgvocab srcvocab)
            for file_type in "${files[@]}"; do
              file_name=$(jq -r ".enzh.$file_type.name" registry.json)
              if [ -n "$file_name" ] && [ "$file_name" != "null" ]; then
                echo "Downloading $file_name for enzh"
                download_url="https://github.com/mozilla/firefox-translations-models/raw/refs/heads/main/models/prod/enzh/${file_name}.gz"
                curl -L -sL $download_url -o "models-enzh/enzh/${file_name}.gz"
                gunzip -f "models-enzh/enzh/${file_name}.gz"
                echo "$file_name downloaded and extracted to models-enzh/enzh/$file_name"
              else
                echo "Failed to find $file_type for enzh in registry.json"
              fi
            done
            echo "Download completed. Model structure:"
            pwd
            ls -R models-enzh
        - name: docker login
          script: docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
        - name: docker build
          script: docker build -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:latest -f Dockerfile.enzh .
        - name: docker push
          script: docker push ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:latest
